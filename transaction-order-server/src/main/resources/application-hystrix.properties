#######################################################################################################################
# Hystrix配置(只有feign.hystrix.enabled=true才会生效。默认是false的)。其属性大致如下：
#       Execution：控制HystrixCommand.run() 的如何执行
#       Fallback: 控制HystrixCommand.getFallback() 如何执行
#       Circuit Breaker： 控制断路器的行为
#       Metrics: 捕获和HystrixCommand 和 HystrixObservableCommand 执行信息相关的配置属性
#       Request Context：设置请求上下文的属性
#       Collapser Properties：设置请求合并的属性
#       Thread Pool Properties：设置线程池的属性
#######################################################################################################################
# 控制HystrixCommand的隔离策略，THREAD->线程池隔离策略(默认)，SEMAPHORE->信号量隔离策略
# 在默认情况下，推荐HystrixCommands 使用 thread 隔离策略，HystrixObservableCommand 使用 semaphore 隔离策略。
# 只有在高并发(单个实例每秒达到几百个调用)的调用时，才需要修改HystrixCommands 的隔离策略为semaphore 。semaphore 隔离策略通常只用于非网络调用
hystrix.command.default.execution.isolation.strategy=THREAD
# 配置HystrixCommand执行的超时时间，执行超过该时间会进行服务降级处理。默认:1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
# 配置HystrixCommand的执行是否启用超时时间。默认：true
hystrix.command.default.execution.timeout.enabled=true
# 配置HystrixCommand执行超时的时候是否要中断。默认：true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
# 配置HystrixCommand执行被取消的时候是否要中断。默认：false
hystrix.command.default.execution.isolation.thread.interruptOnCancel=true
# 当使用信号量隔离策略时，用来控制并发量的大小，超过该并发量的请求会被拒绝。默认：10
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10
# 用于控制是否启用服务降级。默认：true
hystrix.command.default.fallback.enabled=true
# 是否开启断路器功能。默认：true
hystrix.command.default.circuitBreaker.enabled=true
# 此属性设置从调用线程允许HystrixCommand.getFallback（）方法允许的最大并发请求数。如果达到最大的并发量，则接下来的请求会被拒绝并且抛出异常。默认值：10
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=10
# 该属性设置滚动窗口中将使断路器跳闸的最小请求数量。如果此属性值为20，则在窗口时间内（如10s内），如果只收到19个请求且都失败了，则断路器也不会开启。默认值：20
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
# 断路器跳闸后，在此值的时间的内，hystrix会拒绝新的请求，只有过了这个时间断路器才会打开闸门。默认值：5000
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
# 设置失败百分比的阈值。如果失败比率超过这个值，则断路器跳闸并且进入fallback逻辑。默认值：50
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
# 如果设置true，则强制使断路器跳闸，则会拒绝所有的请求.此值会覆盖circuitBreaker.forceClosed的值。默认值：false
hystrix.command.default.circuitBreaker.forceOpen=false
# 如果设置true，则强制使断路器进行关闭状态，此时会允许执行所有请求，无论是否失败的次数达到circuitBreaker.errorThresholdPercentage值。默认值：false
hystrix.command.default.circuitBreaker.forceClosed=false
# 设置统计滚动窗口的时间长度。默认值：10000
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000
# 设置统计滚动窗口的桶数量。默认值：10。
# 注意：以下配置必须成立，否则会抛出异常。metrics.rollingStats.timeInMilliseconds % metrics.rollingStats.numBuckets == 0
# 如：10000/10、10000/20是正确的配置,但是10000/7错误的。在高并发的环境里，每个桶的时间长度建议大于100ms
hystrix.command.default.metrics.rollingStats.numBuckets=10
# 设置执行延迟是否被跟踪，并且被计算在失败百分比中。如果设置为false,则所有的统计数据返回-1。默认值： true
hystrix.command.default.metrics.rollingPercentile.enabled=true
# 此属性设置统计滚动百分比窗口的持续时间。默认值：60000
hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds=60000
# 设置统计滚动百分比窗口的桶数量。默认值：6
# 注意：以下配置必须成立，否则会抛出异常。metrics.rollingPercentile.timeInMilliseconds % metrics.rollingPercentile.numBuckets == 0
# 如： 60000/6、60000/60是正确的配置,但是10000/7错误的。在高并发的环境里，每个桶的时间长度建议大于1000ms
hystrix.command.default.metrics.rollingPercentile.numBuckets=6
# 此属性设置每个桶保存的执行时间的最大值。如果桶数量是100，统计窗口为10s，如果这10s里有500次执行，只有最后100次执行会被统计到bucket里去。默认值：100
hystrix.command.default.metrics.rollingPercentile.bucketSize=100
# 采样时间间隔。默认值：500
hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=500
# 是否开启请求缓存功能。默认值：true
hystrix.command.default.requestCache.enabled=true
# 表示是否开启日志，打印执行HystrixCommand的情况和事件。默认值：true
hystrix.command.default.requestLog.enabled=true
# 设置线程池的core的大小。默认值：10
hystrix.threadpool.default.coreSize=10
# 设置最大的线程池的大小，只有设置allowMaximumSizeToDivergeFromCoreSize时，此值才起作用。默认值：10
hystrix.threadpool.default.maximumSize=10
# 设置最大的BlockingQueue队列的值。如果设置-1，则使用SynchronousQueue队列，如果设置正数，则使用LinkedBlockingQueue队列。默认值：-1
hystrix.threadpool.default.maxQueueSize=-1
# 因为maxQueueSize值不能被动态修改，所有通过设置此值可以实现动态修改等待队列长度。即等待的队列的数量大于queueSizeRejectionThreshold时（但是没有达到maxQueueSize值），则开始拒绝后续的请求进入队列。
# 如果设置-1，则属性不启作用。默认值：5
hystrix.threadpool.default.queueSizeRejectionThreshold=5
# 设置线程多久没有服务后，需要释放（maximumSize-coreSize ）个线程。默认值：1
hystrix.threadpool.default.keepAliveTimeMinutes=1
# 设置allowMaximumSizeToDivergeFromCoreSize值为true时，maximumSize才有作用。默认值：false
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize=false
# 线程池统计指标的时间，默认10000
hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds=10000
# 将rolling window划分为n个buckets，默认10
hystrix.threadpool.default.metrics.rollingStats.numBuckets=10









